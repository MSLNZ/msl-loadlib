[project]
name = "msl-loadlib"
dynamic = ["version"]
dependencies = []
description = "Load a library (and access a 32-bit library from 64-bit Python)"
license = {file = "LICENSE.txt"}
authors =[
    {name = "Measurement Standards Laboratory of New Zealand", email = "info@measurement.govt.nz"},
]
maintainers = [
    {name = "Joseph Borbely", email = "joseph.borbely@measurement.govt.nz"},
]
requires-python = ">=3.8"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
]

[project.urls]
Changes = "https://msl-loadlib.readthedocs.io/en/stable/changelog.html"
Documentation = "https://msl-loadlib.readthedocs.io/en/stable/"
Homepage = "https://msl-loadlib.readthedocs.io/en/stable/"
Source = "https://github.com/MSLNZ/msl-loadlib"
Tracker = "https://github.com/MSLNZ/msl-loadlib/issues"

[project.optional-dependencies]
all = [
    "comtypes;sys_platform=='win32'",
    "py4j",
    "pythonnet"
]
clr = ["pythonnet"]
com = ["comtypes"]
java = ["py4j"]

[dependency-groups]
doc = [
    "mike>=2.1.3",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.11",
    "mkdocstrings-python>=1.11.1",
]
lint = [
    "ruff>=0.11.0",
]
test = [
    "numpy>=1.24.4",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]
type = [
    "basedpyright>=1.28.1",
    "mypy>=1.14.1",
]
dev = [
    "comtypes>=1.4.10;sys_platform=='win32'",
    "hatch>=1.14.0",
    "py4j>=0.10.9.9",
    "pythonnet>=3.0.5",
    {include-group = "doc"},
    {include-group = "lint"},
    {include-group = "test"},
    {include-group = "type"},
]

[project.scripts]
freeze32 = "msl.loadlib.freeze_server32:_cli"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/msl/loadlib/_version.py"

[tool.hatch.build.targets.sdist]
include = ["src"]
exclude = [
    "*.dll",
    "*.dylib",
    "*.so",
    "Trig.class",
    "java_lib.jar",
    "labview_lib.h",
    "server32-linux*",
    "server32-windows.exe*",
]

[tool.hatch.build.targets.wheel]
packages = ["src/msl"]

[tool.hatch.build.targets.custom]
packages = ["src/msl"]
versions = [
    "linux_i686",
    "linux_x86_64",
    "macos_arm64",
    "macos_x86_64",
    "win32",
    "win_amd64",
]

[tool.hatch.envs.default.scripts]
clean = "rm -rf .coverage_html dist docs/_apidoc docs/_build .pytest_cache"

[tool.hatch.envs.hatch-test]
features = ["tests"]
default-args = ["--config-file=pyproject.toml"]

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"
cov-combine = "coverage combine"
cov-report = "coverage html"

[tool.hatch.envs.docs]
features = ["docs"]

[tool.hatch.envs.docs.scripts]
apidoc = "sphinx-apidoc --force --module-first --separate --implicit-namespaces --output-dir docs/_apidoc msl"
build = "sphinx-build docs docs/_build/html"
clean = "rm -rf docs/_apidoc docs/_build"
show = "python -c \"import os, webbrowser; webbrowser.open('file://' + os.getcwd() + '/docs/_build/html/index.html')\""
rebuild = ["clean", "build", "show"]

[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--doctest-modules",
    "--doctest-glob=*.md",
    "--import-mode=importlib",
    "--ignore=hatch_build.py",
    "--ignore=docs/conf.py",
    "--ignore=docs/_ext/autodoc_intenum.py",
    "--ignore=src/msl/examples",
    "--ignore=src/msl/loadlib/_types.py",
    "--ignore=tests/check_pythonw.py",
    "--ignore=tests/check_server32_imports.py",
    "--ignore=tests/bad_servers",
    "--ignore=tests/dotnet_config/legacy_v2_runtime.py",
    "--ignore=tests/server32_comtypes",
    "--ignore=tests/sew_eurodrive",
]
cache_dir = ".cache/pytest"
consider_namespace_packages = true
doctest_optionflags = "NORMALIZE_WHITESPACE ALLOW_UNICODE ELLIPSIS"

[tool.coverage.run]
branch = true
data_file = ".cache/coverage/.coverage"
omit = [
    "src/msl/examples/*",
    "*/msl-loadlib-com-wrapper/*",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
include_namespace_packages = true

[tool.coverage.html]
directory = ".cache/coverage"
title = "MSL-LoadLib coverage report"

[tool.mypy]
cache_dir = ".cache/mypy"
strict = true
strict_bytes = true

# with the environment variable MYPYPATH=src defined, namespace_packages=true and
# explicit_package_bases=true, the following error goes away
#   Source file found twice under different module names: "loadlib" and "msl.loadlib"
# https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules
namespace_packages = true
explicit_package_bases = true

allow_redefinition = false
allow_untyped_globals = false
disallow_any_decorated = true
disallow_any_explicit = false  # true
disallow_any_expr = false  # true
disallow_any_unimported = true
ignore_missing_imports = false
implicit_optional = false
local_partial_types = true
scripts_are_modules = true
warn_no_return = true
warn_unreachable = true

[tool.basedpyright]
failOnWarnings = true
typeCheckingMode = "recommended"
exclude = [
    "**/.*",
    "**/__pycache__",
    "**/_version.py",
]
reportAny = false
reportExplicitAny = false

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
exclude = [
    ".cache",
    ".git",
    ".github",
    ".venv",
    "build",
    "dist",
    "venv",
]
namespace-packages = ["src/msl"]
target-version = "py38"

[tool.ruff.lint.isort]
known-first-party = ["msl.loadlib"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ANN401", # dynamically typed expressions (typing.Any) are disallowed
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "S101", # Use of `assert` detected
    "PLR2004", # Magic value used in comparison
    "INP001", # implicit-namespace-package
]
"docs/*.py" = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
]

[tool.ruff.lint.pydocstyle]
convention = "google"

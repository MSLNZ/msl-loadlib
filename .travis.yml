language: python

dist: xenial

sudo: false

matrix:
  include:
    - os: linux
      python: 2.7
      env: CLONE_PYTHONNET="false"
    - os: linux
      python: 3.5
      env: CLONE_PYTHONNET="false"
    - os: linux
      python: 3.6
      env: CLONE_PYTHONNET="false"
    - os: linux
      python: 3.7
      env: CLONE_PYTHONNET="false"
    - os: linux
      python: 3.8
      env: CLONE_PYTHONNET="false"
    - os: osx
      language: generic
      env: PYTHON=2.7.18 CLONE_PYTHONNET="false"
    - os: osx
      language: generic
      env: PYTHON=3.5.9 CLONE_PYTHONNET="false"
    - os: osx
      language: generic
      env: PYTHON=3.6.10 CLONE_PYTHONNET="false"
    - os: osx
      language: generic
      env: PYTHON=3.7.7 CLONE_PYTHONNET="false"
    - os: osx
      language: generic
      env: PYTHON=3.8.3 CLONE_PYTHONNET="false"

addons:
  apt:
    sources:
      - sourceline: deb https://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.20 main
        key_url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xA6A19B38D3D831EF
    packages:
      - mono-devel
      - ca-certificates-mono
      - software-properties-common
      - gcc-8-multilib
      - g++-8-multilib
      - gfortran
      - libgfortran3
      - libgfortran3:i386
      - lib32gfortran3
      - libx32gfortran3
      - zlib1g:i386
      - libglib2.0-dev
      - clang

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update
      brew outdated pyenv || brew upgrade pyenv
      brew install pyenv-virtualenv gcc pkg-config glib mono
      brew cask install java
      pyenv install --list
      pyenv install $PYTHON
      export PYENV_VERSION=$PYTHON
      pyenv virtualenv venv
      source /Users/travis/.pyenv/versions/${PYTHON}/envs/venv/bin/activate
    fi

install:
  - mono --version
  - java --version
  - python --version
  - python -m pip install --upgrade pip
  - python -m pip install --upgrade setuptools wheel
  - python -m pip install --upgrade pycparser
  - |
    if [ "CLONE_PYTHONNET" == "true" ]; then
      git clone https://github.com/pythonnet/pythonnet.git
      cd pythonnet
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        sed -i '' 's/if not enable_shared://' setup.py
        sed -i '' 's/defines.append("PYTHON_WITHOUT_ENABLE_SHARED")//' setup.py
      fi
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sed -i 's/if not enable_shared://' setup.py
        sed -i 's/defines.append("PYTHON_WITHOUT_ENABLE_SHARED")//' setup.py
      fi
      python setup.py bdist_wheel
      cd ..
      python -m pip install --no-index --find-links=./pythonnet/dist/ pythonnet
      rm -rf pythonnet
    fi
  - |
    if [ "CLONE_PYTHONNET" == "false" ]; then
      python -m pip install pythonnet
    fi

script:
  - python setup.py tests
